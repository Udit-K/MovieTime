!function(){"use strict";function e(e){e.when("/login",{templateUrl:"app/views/login.view.html",controller:"LoginController",controllerAs:"loginVm"}).when("/signup",{templateUrl:"app/views/signup.view.html",controller:"SignupController",controllerAs:"signupVm"}).when("/video",{templateUrl:"app/views/videohome.html",controller:"VideoHomeController",controllerAs:"videoVm"}).when("/video-detail/:id",{templateUrl:"app/views/video-detail.tmpl.html",controller:"VideoDetailController",controllerAs:"videoDetailVm"}).when("/comments/:id",{templateUrl:"app/views/review.tmpl.html",controller:"ReviewController",controllerAs:"reviewVm"}).when("/admin",{templateUrl:"app/views/add-video.tmpl.html",controller:"AddVideoController",controllerAs:"addVideoVm"}).when("/edit-video/:id",{templateUrl:"app/views/edit-video.tmpl.html",controller:"EditVideoController",controllerAs:"editVideoVm"}).otherwise({redirectTo:"/login"})}function o(){console.log("running..")}angular.module("movieApp",["ngRoute","ngMessages"]).config(e).run(o),e.$inject=["$routeProvider"],o.$inject=[]}(),function(){"use strict";function e(e,o,n){function t(e){return e.data}function i(e){return o.reject("Error:"+e.statusText)}var r=this;r.getVideos=function(){return e.get(n.API_HOST+"/videos").then(t,i)},r.getVideoById=function(o){return e.get(n.API_HOST+"/videos/"+o).then(t,i)},r.createVideo=function(o){return e.post(n.API_HOST+"/videos",o).then(t,i)},r.deleteVideo=function(o){return e.delete(n.API_HOST+"/videos/"+o).then(t,i)},r.editVideo=function(o,r){return e.put(n.API_HOST+"/videos/"+o,r).then(t,i)}}angular.module("movieApp").service("videoService",e),e.$inject=["$http","$q","CONFIG"]}(),function(){"use strict";function e(e,o,n){function t(e){return e.data}function i(e){return o.reject("ERROR: "+e.statusText)}var r=this;r.signUpUser=function(o){return e.post(n.API_HOST+"/users",o).then(t,i)},r.signInUser=function(o,r){return e.get(n.API_HOST+"/users/"+o+"/"+r).then(t,i)}}angular.module("movieApp").service("userService",e),e.$inject=["$http","$q","CONFIG"]}(),function(){"use strict";function e(e,o,n){function t(e){return e.data}function i(e){return o.reject("Error:"+e.statusText)}var r=this;r.getComments=function(o){return e.get(n.API_HOST+"/comment/"+o+"/comments/").then(t,i)},r.createComment=function(o,r,l){return e.post(n.API_HOST+"/comment/"+o+"/comments/"+r,l).then(t,i)}}angular.module("movieApp").service("reviewService",e),e.$inject=["$http","$q","CONFIG"]}(),function(){"use strict";angular.module("movieApp").filter("searchFor",function(){return function(e,o){if(!o)return e;var n=[];return angular.forEach(e,function(e){-1===e.title.toLowerCase().indexOf(o)&&-1===e.genre.toLowerCase().indexOf(o)&&-1===e.released.indexOf(o)&&-1===e.type.indexOf(o)||n.push(e)}),n}})}(),function(){"use strict";function e(e,o,n,t){var i=this;i.allMovies=[];var r=localStorage.getItem("myUser");i.myUser=JSON.parse(r),i.logOut=function(){localStorage.removeItem("myUser"),t.path("/login")},console.log("my user is "+i.myUser),e.getVideos().then(function(e){i.allMovies=e,console.log(e)},function(e){console.log("ERRRRR : "+e)}),i.sorter={sortBy:"imdbRating",sortOrder:!1}}angular.module("movieApp").controller("VideoHomeController",e),e.$inject=["videoService","$rootScope","userService","$location"]}(),function(){"use strict";function e(e,o,n){var t=this;t.video={},t.comments={},t.createComment=function(){var e=new Date;t.newComment.commentDate=e,t.newComment.commentBy=t.myUser.firstName+" "+t.myUser.lastName,o.createComment(n.id,t.myUser.userId,t.newComment).then(function(e){e&&(console.log("comment made: "+e),window.location.reload())},function(e){console.log(e)})};var i=localStorage.getItem("myUser");t.myUser=JSON.parse(i),console.log("video detail controller invoked"),console.log(n),e.getVideoById(n.id).then(function(e){t.video=e,console.log(e)},function(e){console.log(e)}),o.getComments(n.id).then(function(e){t.comments=e,console.log(e)},function(e){console.log(e)})}angular.module("movieApp").controller("VideoDetailController",e),e.$inject=["videoService","reviewService","$routeParams"]}(),function(){"use strict";function e(e,o){var n=this;n.createUser=function(){console.log(n.newUser),e.signUpUser(n.newUser).then(function(e){e&&(alert("Sign up Successful, Redirecting..."),o.path("/login"))},function(e){console.log(e)})}}angular.module("movieApp").controller("SignupController",e),e.$inject=["userService","$location"]}(),function(){"use strict";function e(e,o){var n=this;n.review={},n.getComments=function(){e.getComments(o.id).then(function(e){n.comments=e},function(e){console.log(e)})}}angular.module("movieApp").controller("ReviewController",e),e.$inject=["reviewService","$routeParams"]}(),function(){"use strict";function e(e,o){var n=this;n.signIn=function(){console.log("Trying login using :"+n.email+", "+n.pass),e.signInUser(n.email,n.pass).then(function(e){console.log(e),console.log("user signed in.."),localStorage.setItem("myUser",JSON.stringify(e)),o.path("/video")},function(e){console.log(e),alert("Error signing in... INVALID CREDENTIALS")})}}angular.module("movieApp").controller("LoginController",e),e.$inject=["userService","$location"]}(),function(){"use strict";function e(e,o,n){var t=this;t.video={},t.updateVideo=function(){console.log("update function invoked"),e.editVideo(n.id,t.video).then(function(e){console.log("video edited: "+e),o.path("/admin")},function(e){console.log("error creating video: "+e)})};var i=localStorage.getItem("myUser");t.myUser=JSON.parse(i),t.logOut=function(){localStorage.removeItem("myUser"),o.path("/login")},e.getVideoById(n.id).then(function(e){t.video=e,console.log(e)},function(e){console.log("ERRRRR : "+e)})}angular.module("movieApp").controller("EditVideoController",e),e.$inject=["videoService","$location","$routeParams"]}(),function(){"use strict";function e(e,o,n,t){var i=this;i.allMovies=[];var r=localStorage.getItem("myUser");i.myUser=JSON.parse(r),i.createVideo=function(){e.createVideo(i.newVideo).then(function(e){console.log("video created: "+e),window.location.reload()},function(e){console.log("error creating video: "+e)})},i.deleteVideo=function(o){console.log("delete function invoked with video id: "+o),e.deleteVideo(o).then(function(e){console.log("video deleted"),window.location.reload()},function(e){console.log(e)})},i.logOut=function(){localStorage.removeItem("myUser"),t.path("/login")},e.getVideos().then(function(e){i.allMovies=e,console.log(e)},function(e){console.log("ERRRRR : "+e)})}angular.module("movieApp").controller("AddVideoController",e),e.$inject=["videoService","$rootScope","userService","$location"]}(),function(){"use strict";angular.module("movieApp").constant("CONFIG",{API_HOST:"http://localhost:8080/movie-rest/api"})}();